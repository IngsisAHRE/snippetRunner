import org.jlleitschuh.gradle.ktlint.reporter.ReporterType

plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24'
	id 'org.jetbrains.kotlin.jvm' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
	id 'org.jlleitschuh.gradle.ktlint' version '12.1.1'
	id 'jacoco-report-aggregation'
}

group = 'austral.ingsisAHRE'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

ktlint {
	version = "0.50.0"
	debug = true
	verbose = true
	android = false
	outputToConsole = true
	outputColorName = "RED"
	reporters {
		reporter(ReporterType.PLAIN)
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = "BUNDLE"
			limit {
				counter = "INSTRUCTION"
				value = "COVEREDRATIO"
				minimum = 0.80
			}
			limit {
				counter = "BRANCH"
				value = "COVEREDRATIO"
				minimum = 0.70
			}
		}
	}
}

tasks.check {
	dependsOn(tasks.ktlintCheck)
	dependsOn(tasks.jacocoTestCoverageVerification)
}

tasks.register('installGitHooks', Copy) {
	from new File(rootProject.rootDir, '/hooks')
	into { new File(rootProject.rootDir, '/.git/hooks') }
	fileMode 0775
}

tasks.build {
	dependsOn(tasks.installGitHooks)
}
